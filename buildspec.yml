version: 0.2

env:
  variables:
    ECR_REPOSITORY: "node-cicd-demo"
    PUSH_LATEST: "true"

phases:
  pre_build:
    commands:
      - set -euxo pipefail
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - IMAGE_REPO="$ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY"
      - aws ecr get-login-password --region "$AWS_DEFAULT_REGION" | docker login --username AWS --password-stdin "$ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"
      - COMMIT_SHA="${CODEBUILD_RESOLVED_SOURCE_VERSION:0:7}"
      - IMAGE_TAG="${COMMIT_SHA:-local}"
      - echo "Repo: $IMAGE_REPO  Tag: $IMAGE_TAG"
  build:
    commands:
      - echo "Building Docker image..."
      - docker build -t "$ECR_REPOSITORY:$IMAGE_TAG" .
      - docker tag "$ECR_REPOSITORY:$IMAGE_TAG" "$IMAGE_REPO:$IMAGE_TAG"
      - if [ "$PUSH_LATEST" = "true" ]; then docker tag "$ECR_REPOSITORY:$IMAGE_TAG" "$IMAGE_REPO:latest"; fi
  post_build:
    commands:
      - echo "Pushing to ECR..."
      - docker push "$IMAGE_REPO:$IMAGE_TAG"
      - if [ "$PUSH_LATEST" = "true" ]; then docker push "$IMAGE_REPO:latest"; fi
      - |
        cat > imageDetail.json <<EOF
        {
          "name": "$IMAGE_REPO",
          "imageUri": "$IMAGE_REPO:$IMAGE_TAG"
        }
        EOF

artifacts:
  files:
    - imageDetail.json
  discard-paths: yes
